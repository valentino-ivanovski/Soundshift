<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="theme-color" content="#4662D8">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="stylesheet" href="/stylesheets/adminSongsListStyle.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:slnt,wght@-10..0,100..900&display=swap" rel="stylesheet">
    <title>Soundshift</title>
</head>

<body>
    <center>
        <div class="animated-bg">
            <div class="navbar">
                <a class="soundshiftText" href="/adminMainpage">soundshift</a>
                <ul>
                    <li><a href="/adminMainpage">Home</a></li>
                    <li><a href="/adminSearch">Search</a></li>
                    <li><a href="/adminProfile/me">Profile</a></li>
                    <li><a href="/adminUsersList">Users</a></li>
                    <li><a href="/adminSongsList" style="font-weight: 500;">Songs</a></li>
                    <li><a href="/adminCommentsList">Comments</a></li>
                    <li><a href="/adminReportsList">Reports</a></li>
                </ul>
                <li><a href="/logout">Log Out</a></li>
            </div>

            <div class="content">

                <div class="centerdiv">
                    <div class="search-content"
                        style="display: flex; flex-direction: column; gap: 30px; align-items: center; justify-content: center;">
                        <form style="display: flex; flex-direction: column; gap:20px;">
                            <input type="text" id="search" placeholder="Search for a song, artist or song id...">
                            <div class="searchButtons">
                                <button class="buttonSearch">Search</button>
                            </div>
                        </form>
                        <hr style="border: none; border-top: 1px solid rgba(255, 255, 255, 0.2); width: 100%;">
                        <!-- Add this line -->
                    </div>
                </div>

            </div>

            <div class="footer">
                Made by: <a href="https://github.com/valentino-ivanovski" style="color: inherit;">Valentino
                    Ivanovski</a> for Systems 3 - 2024
                - Welcome, <strong>
                    <%= user.username %>ðŸ”¸
                </strong>
            </div>

        </div>
        <script>
            let songSearch = false;
            const form = document.querySelector('form');
            const searchInput = document.getElementById('search');
            const resultsContainer = document.createElement('div');
            const resultsWillShowHere = document.createElement('p');

            resultsContainer.className = 'results';

            form.parentNode.appendChild(resultsContainer);

            fetch(`/adminSongsList/getSongs`)
                .then(response => response.json())
                .then(results => {
                    results.forEach(result => {
                        const resultDiv = document.createElement('div');
                        const singleUnit = document.createElement('div');
                        singleUnit.className = 'singleUnit';

                        const idDiv = document.createElement('p');
                        idDiv.textContent = result.song_id;
                        idDiv.className = 'id';

                        singleUnit.appendChild(idDiv);

                        const songTitleDiv = document.createElement('a');
                        const songUsername = document.createElement('a');
                        const tilde = document.createElement('p');
                        const genre = document.createElement('p');
                        const uploadDate = document.createElement('p');
                        const likes = document.createElement('p');
                        const comments = document.createElement('p');
                        const explicit = document.createElement('p');
                        songTitleDiv.href = `${result.spotify_link}`;
                        songUsername.href = `/adminProfile/${result.username}`;
                        songUsername.style.textDecoration = 'underline';
                        songUsername.textContent = result.username;
                        songTitleDiv.textContent = result.title + " by " + result.artist;
                        songTitleDiv.style.textDecoration = 'underline';
                        likes.textContent = "Likes: " + result.like_count;
                        comments.textContent = "Comments: " + result.comment_count;
                        uploadDate.textContent = result.upload_date;
                        uploadDate.textContent = new Date(result.upload_date).toISOString().slice(0, 10);
                        uploadDate.style.color = 'blue';
                        genre.textContent = "(" + result.genre + ")";
                        genre.style.color = 'gray';
                        explicit.textContent = result.explicit ? "Explicit" : "Clean";
                        tilde.textContent = " - ";
                        songUsername.className = 'title';
                        songTitleDiv.className = 'title';

                        const deleteUser = document.createElement('a');
                        deleteUser.href = `/adminSongsList/deleteSong/${result.song_id}`;
                        deleteUser.textContent = 'Delete';
                        deleteUser.className = 'deleteUser';
                        deleteUser.onclick = function () {
                            return confirm('Are you sure you want to delete this song?');
                        };

                        singleUnit.appendChild(songTitleDiv);
                        singleUnit.appendChild(genre);
                        singleUnit.appendChild(uploadDate);
                        singleUnit.appendChild(likes);
                        singleUnit.appendChild(comments);
                        singleUnit.appendChild(explicit);
                        singleUnit.appendChild(tilde);
                        singleUnit.appendChild(songUsername);
                        singleUnit.appendChild(deleteUser);
                        resultDiv.appendChild(singleUnit);
                        resultsContainer.appendChild(resultDiv);
                    });
                });

            form.onsubmit = function (event) {
                event.preventDefault();
                const query = searchInput.value;
                const url = `/adminSearch/songResults/${query}`;

                fetch(url)
                    .then(response => response.json())
                    .then(results => {
                        resultsContainer.innerHTML = '';
                        if (results.length === 0) {
                            const noResults = document.createElement('p');
                            noResults.textContent = 'No Results';
                            noResults.style.fontFamily = 'Inter';
                            noResults.style.fontWeight = '500';
                            noResults.style.fontSize = '18px';
                            noResults.style.color = 'rgba(255, 255, 255, 0.451)';
                            resultsContainer.appendChild(noResults);
                        } else {
                            results.forEach(result => {
                                const resultDiv = document.createElement('div');
                                const singleUnit = document.createElement('div');
                                singleUnit.className = 'singleUnit';

                                const idDiv = document.createElement('p');
                                idDiv.textContent = result.song_id;
                                idDiv.className = 'id';

                                singleUnit.appendChild(idDiv);

                                const songTitleDiv = document.createElement('a');
                                const songUsername = document.createElement('a');
                                const tilde = document.createElement('p');
                                const genre = document.createElement('p');
                                const uploadDate = document.createElement('p');
                                const likes = document.createElement('p');
                                const comments = document.createElement('p');
                                const explicit = document.createElement('p');
                                songTitleDiv.href = `${result.spotify_link}`;
                                songUsername.href = `/adminProfile/${result.username}`;
                                songUsername.style.textDecoration = 'underline';
                                songUsername.textContent = result.username;
                                songTitleDiv.textContent = result.title + " by " + result.artist;
                                songTitleDiv.style.textDecoration = 'underline';
                                likes.textContent = "Likes: " + result.like_count;
                                comments.textContent = "Comments: " + result.comment_count;
                                uploadDate.textContent = result.upload_date;
                                uploadDate.textContent = new Date(result.upload_date).toISOString().slice(0, 10);
                                uploadDate.style.color = 'blue';
                                genre.textContent = "(" + result.genre + ")";
                                genre.style.color = 'gray';
                                explicit.textContent = result.explicit ? "Explicit" : "Clean";
                                tilde.textContent = " - ";
                                songUsername.className = 'title';
                                songTitleDiv.className = 'title';

                                const deleteUser = document.createElement('a');
                                deleteUser.href = `/adminSongsList/deleteSong/${result.song_id}`;
                                deleteUser.textContent = 'Delete';
                                deleteUser.className = 'deleteUser';
                                deleteUser.onclick = function () {
                                    return confirm('Are you sure you want to delete this song?');
                                };

                                singleUnit.appendChild(songTitleDiv);
                                singleUnit.appendChild(genre);
                                singleUnit.appendChild(uploadDate);
                                singleUnit.appendChild(likes);
                                singleUnit.appendChild(comments);
                                singleUnit.appendChild(explicit);
                                singleUnit.appendChild(tilde);
                                singleUnit.appendChild(songUsername);
                                singleUnit.appendChild(deleteUser);
                                resultDiv.appendChild(singleUnit);
                                resultsContainer.appendChild(resultDiv);
                            });
                        }
                    })
                    .catch(err => console.error(err));
            };
        </script>
    </center>
</body>